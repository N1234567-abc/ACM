1.Create Class Student : 
 
package com.jdbctemplate; 
public class Student { 
  private Integer age; 
    private String name; 
    private Integer id; 
 
    public void setAge(Integer age) { 
       this.age = age; 
    } 
    public Integer getAge() { 
       return age; 
    } 
    public void setName(String name) { 
       this.name = name; 
    } 
    public String getName() { 
       return name; 
    } 
    public void setId(Integer id) { 
       this.id = id; 
    } 
    public Integer getId() { 
       return id; 
    } 
} 

2.Create Class StudentMapper 
 
package com.jdbctemplate; 
import java.sql.ResultSet; 
import java.sql.SQLException; 
import org.springframework.jdbc.core.RowMapper; 
 
public class StudentMapper implements RowMapper { 
    public Student mapRow(ResultSet rs, int rowNum) throws SQLException { 
        Student student = new Student(); 
        student.setId(rs.getInt("id")); 
        student.setName(rs.getString("name")); 
        student.setAge(rs.getInt("age")); 
         
        return student; 
     } 
  } 
 
 
 
 
3.Create Class StudentDAO 
 
package com.jdbctemplate; 
import java.util.List; 
import javax.sql.DataSource; 
public interface StudentDAO { 
 /**  
     * This is the method to be used to initialize 
     * database resources ie. connection. 
  */ 
  public void setDataSource(DataSource ds); 
   
  /**  
     * This is the method to be used to create 
     * a record in the Student table. 
  */ 
  public void create(String name, Integer age); 
   
  /**  
     * This is the method to be used to list down 
     * a record from the Student table corresponding 
     * to a passed student id. 
  */ 
  public Student getStudent(Integer id); 
   
  /**  
     * This is the method to be used to list down 
     * all the records from the Student table. 
  */ 
  public List<Student> listStudents(); 
   
  /**  
     * This is the method to be used to delete 
     * a record from the Student table corresponding 
     * to a passed student id.
  */ 
  public void delete(Integer id); 
   
  /**  
     * This is the method to be used to update 
     * a record into the Student table. 
  */ 
  public void update(Integer id, Integer age); 
} 
 
 
4.Create Class StudentJDBCTemplate 
 
package com.jdbctemplate; 
import java.util.List; 
import javax.sql.DataSource; 
import org.springframework.jdbc.core.JdbcTemplate; 
 
public class StudentJDBCTemplate implements StudentDAO { 
 
  private DataSource dataSource; 
    private JdbcTemplate jdbcTemplateObject; 
     
    public void setDataSource(DataSource dataSource) { 
        this.dataSource = dataSource; 
        this.jdbcTemplateObject = new JdbcTemplate(dataSource); 
     } 
     public void create(String name, Integer age) { 
        String SQL = "insert into Student (name, age) values (?,? )"; 
        jdbcTemplateObject.update( SQL,new Object[]{name, age});
System.out.println("Created Record Name = " + name + " Age = " + age); 
        return; 
     } 
     public Student getStudent(Integer id) { 
        String SQL = "select * from Student where id = ?"; 
        Student student = (Student) jdbcTemplateObject.queryForObject(SQL,  
           new Object[]{id}, new StudentMapper()); 
         
        return student; 
     } 
     public List<Student> listStudents() { 
        String SQL = "select * from Student"; 
        List <Student> students = jdbcTemplateObject.query(SQL, new 
StudentMapper()); 
        return students; 
     } 
     public void delete(Integer id) { 
        String SQL = "delete from Student where id = ?"; 
        jdbcTemplateObject.update(SQL,new Object[]{id}); 
        System.out.println("Deleted Record with ID = " + id ); 
        return; 
     } 
     public void update(Integer id, Integer age){ 
        String SQL = "update Student set age = ? where id = ?"; 
        jdbcTemplateObject.update(SQL,new Object[]{age, id}); 
        System.out.println("Updated Record with ID = " + id ); 
        return; 
     }
}


5.Create Class MainApp 
 
package com.jdbctemplate; 
import java.util.List; 
import org.springframework.context.ApplicationContext; 
import org.springframework.context.support.FileSystemXmlApplicationContext; 
 
public class MainApp { 
 public static void main(String[] args) { 
      //pplicationContext context = new 
ClassPathXmlApplicationContext("C:\\Users\\spdc\\eclipse
workspace\\demo\\JdbcTemplate\\src\\com\\jdbctemplate\\Beans.xml"); 
  ApplicationContext context = new 
FileSystemXmlApplicationContext("C:\\Users\\spdc\\eclipse
workspace\\demo\\JdbcTemplate\\src\\com\\jdbctemplate\\Beans.xml"); 
 
       StudentJDBCTemplate studentJDBCTemplate =  
          (StudentJDBCTemplate)context.getBean("studentJDBCTemplate"); 
        
       System.out.println("------Records Creation--------" ); 
       studentJDBCTemplate.create("Sachin", 11); 
       studentJDBCTemplate.create("Virat", 2); 
       studentJDBCTemplate.create("Dravid", 15); 
 
       System.out.println("------Listing Multiple Records--------" ); 
       List<Student> students = studentJDBCTemplate.listStudents(); 
        
       for (Student record : students) { 
          System.out.print("ID : " + record.getId() ); 
          System.out.print(", Name : " + record.getName() ); 
          System.out.println(", Age : " + record.getAge()); 
       }

   System.out.println("----Updating Record with ID = 2 -----" ); 
       studentJDBCTemplate.update(2, 20); 
 
       System.out.println("----Listing Record with ID = 2 -----" ); 
       Student student = studentJDBCTemplate.getStudent(2); 
       System.out.print("ID : " + student.getId() ); 
       System.out.print(", Name : " + student.getName() ); 
       System.out.println(", Age : " + student.getAge()); 
    } 
} 
 
6.Create Beans.xml 
 
<?xml version = "1.0" encoding = "UTF-8"?> 
<beans xmlns = "http://www.springframework.org/schema/beans" 
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"  
   xsi:schemaLocation = "http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd "> 
   <!-- Initialization for data source --> 
   <bean id="dataSource"  
      class = "org.springframework.jdbc.datasource.DriverManagerDataSource"> 
      <property name = "driverClassName" value = "com.mysql.jdbc.Driver"/> 
      <property name = "url" value = "jdbc:mysql://localhost:3306/test"/> 
      <property name = "username" value = "root"/> 
      <property name = "password" value = "12345"/> 
   </bean> 
 
   <!-- Definition for studentJDBCTemplate bean --> 
   <bean id = "studentJDBCTemplate"  
 class = "com.jdbctemplate.StudentJDBCTemplate"> 
      <property name = "dataSource" ref = "dataSource" />     
   </bean> 
      
</beans>
